#!/usr/bin/env perl

use v5.10.1;
use strict;
use warnings;

sub update_changelog ($$);
sub gen_all_vers_cfg ();

my $version = shift or die "No version number specified.\n";

if ($version !~ /^\d+(\.\d+){2}$/) {
    die "ERROR: Bad version number: $version";
}

{
    my $file = "dymetrics-nginx-module-NGINX_VERSION.mk";
    open my $in, $file
        or die "Cannot open $file for reading: $!\n";
    my $new;
    my $changed;
    while (<$in>) {
        if (s/^ DYMETRICS_NGINX_MODULE_VER\ :=\ ( \d+(\.\d+){2} ) $/DYMETRICS_NGINX_MODULE_VER := $version/msx) {
            my $old_ver = $1;
            if ($old_ver ne $version) {
                $changed = 1;
                say "INFO: $file: version needs update from $old_ver to $version";

            } else {
                say "INFO: $file is already up to date: $old_ver";
                last;
            }
        }

    } continue {
        $new .= $_;
    }
    close $in;

    if ($changed) {
        open my $out, ">$file"
            or die "Cannot open $file for writing: $!\n";
        print $out $new;
        close $out;
        say "$file updated.";
    }
}

for my $dir (reverse sort glob 'dymetrics-nginx-module-NGINX_VERSION*') {
    next unless -d $dir && -d "$dir/debian";
    if ($dir =~ /^dymetrics-nginx-module-NGINX_VERSION$/) {
        my $name = $dir;
        my $changelog = "$dir/debian/changelog.tt2";
        if (!-f $changelog) {
            warn "Cannot find $changelog file\n";
            next;
        }
        #say $dir;
        update_changelog $name, $changelog;
    }
}

sub update_changelog ($$) {
    my ($name, $file) = @_;

    #warn "name: $name, file: $file";

    open my $in, $file
        or die "Cannot open $file for reading: $!\n";
    my $src = do { local $/; <$in>; };
    close $in;

    if ($src !~ m/^ \Q$name\E \s+ \( \d+ /xsm) {
        die "Bad file content in $file";
    }

    if ($src =~ /^ \Q$name\E \s+ \( ( \d+(\.\d+){2} ) - \d+ ~ /xsm) {
        my $old_ver = $1;
        if ($old_ver ne $version) {
            say "INFO: $file: version needs update from $old_ver to $version";

        } else {
            say "INFO: $file is already up to date: $old_ver";
            return;
        }

    } else {
        die "$file: version not found";
    }

    my $now = `date +'%a, %e %b %Y %H:%M:%S %z'`;
    chomp $now;
    $now =~ s/\s\s+/ /g;
    #warn "today: $today";

    my $new = <<_EOC_;
$name ($version-1~[% distro %]1) [% distro %]; urgency=high

  * upgraded dymetrics-nginx-module to $version.

 -- OpenResty Admin <admin\@openresty.com>  $now

_EOC_

    $src = $new . $src;

    open my $out, ">$file"
        or die "Cannot open $file for writing: $!\n";
    print $out $src;
    close $out;
    say "$file updated.";
    gen_all_vers_cfg;
}


sub gen_all_vers_cfg () {
    my @ngx_vers = (["1.19.9", "1.19.9.1"], ["1.21.4", "1.21.4.2"], ["1.25.3", "1.25.3.2"], ["1.27.1", "1.27.1.1"] );

    for my $ver (@ngx_vers) {
        my $ngx_ver=$ver->[0];
        my $or_ver=$ver->[1];

        system("rm -fr dymetrics-nginx-module-$ngx_ver") == 0
            or die "Cannot remove dymetrics-nginx-module-$ngx_ver: $!\n";

        system("cp -R dymetrics-nginx-module-NGINX_VERSION dymetrics-nginx-module-$ngx_ver") == 0
            or die "Cannot cp to dymetrics-nginx-module-$ngx_ver: $!\n";

        rename "dymetrics-nginx-module-$ngx_ver/debian/dymetrics-nginx-module-NGINX_VERSION.install",
               "dymetrics-nginx-module-$ngx_ver/debian/dymetrics-nginx-module-$ngx_ver.install"
               or die "Cannot rename dymetrics-nginx-module-NGINX_VERSION.install: $!";
        system("find dymetrics-nginx-module-$ngx_ver/debian -type f | xargs sed -i s/NGINX_VERSION/$ngx_ver/g") == 0
            or die "can not change NGINX_VERSION: $!";

        system("find dymetrics-nginx-module-$ngx_ver/debian -type f | xargs sed -i s/OPENRESTY_VERSION/$or_ver/g") == 0
            or die "can not change OPENRESTY_VERSION: $!";

        system("cp -R dymetrics-nginx-module-NGINX_VERSION.mk dymetrics-nginx-module-$ngx_ver.mk") == 0
            or die "can not copy dymetrics-nginx-module-NGINX_VERSION.mk: $!";

        system("sed -i s/NGINX_VERSION/$ngx_ver/g dymetrics-nginx-module-$ngx_ver.mk") == 0
            or die "can not change NGINX_VERSION: $!";

        system("sed -i s/OPENRESTY_VERSION/$or_ver/g dymetrics-nginx-module-$ngx_ver.mk") == 0
            or die "can not change OPENRESTY_VERSION: $!";
    }
}
